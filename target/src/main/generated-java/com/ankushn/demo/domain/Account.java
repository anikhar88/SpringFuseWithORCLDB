/*
 * (c) Copyright 2005-2015 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/main/java/domain/Entity.e.vm.java
 */
package com.ankushn.demo.domain;

import static javax.persistence.CascadeType.MERGE;
import static javax.persistence.CascadeType.PERSIST;
import static javax.persistence.FetchType.LAZY;
import static javax.persistence.TemporalType.TIMESTAMP;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.Transient;
import javax.persistence.Version;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import javax.xml.bind.annotation.XmlTransient;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.validator.constraints.Email;
import org.hibernate.validator.constraints.NotEmpty;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.ankushn.demo.audit.AuditContextHolder;
import com.ankushn.demo.validation.FixedLength;
import com.google.common.base.Objects;

@Entity
@Table(name = "ACCOUNT")
public class Account implements Identifiable<String>, Serializable {
    private static final long serialVersionUID = 1L;
    private static final Logger log = LoggerFactory.getLogger(Account.class);

    // Raw attributes
    private String id;
    private String login;
    private String password;
    private String email;
    private Boolean isEnabled;
    private String civility;
    private String firstName;
    private String lastName;
    private Date birthDate;
    private String description;
    private Date creationDate;
    private String creationAuthor;
    private Date lastModificationDate;
    private String lastModificationAuthor;
    private Integer version;

    // Many to one
    private Address address;

    // Many to many
    private List<Role> roles = new ArrayList<Role>();

    // -------------------------------
    // Role names support
    // -------------------------------

    /**
     * Returns the granted authorities for this user. You may override
     * this method to provide your own custom authorities.
     */
    @Transient
    @XmlTransient
    public List<String> getRoleNames() {
        List<String> roleNames = new ArrayList<String>();

        for (Role role : getRoles()) {
            roleNames.add(role.getRoleName());
        }

        return roleNames;
    }

    // -- [id] ------------------------

    @Override
    @Column(name = "ID", length = 36)
    @GeneratedValue(generator = "strategy-uuid2")
    @GenericGenerator(name = "strategy-uuid2", strategy = "uuid2")
    @Id
    public String getId() {
        return id;
    }

    @Override
    public void setId(String id) {
        this.id = id;
    }

    public Account id(String id) {
        setId(id);
        return this;
    }

    @Override
    @Transient
    @XmlTransient
    public boolean isIdSet() {
        return id != null && !id.isEmpty();
    }

    // -- [login] ------------------------

    @NotEmpty
    @Size(max = 100)
    @Column(name = "LOGIN", nullable = false, unique = true, length = 100)
    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public Account login(String login) {
        setLogin(login);
        return this;
    }

    // -- [password] ------------------------

    @NotEmpty
    @Size(max = 100)
    @Column(name = "`PASSWORD`", nullable = false, length = 100)
    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Account password(String password) {
        setPassword(password);
        return this;
    }

    // -- [email] ------------------------

    @Email
    @NotEmpty
    @Size(max = 100)
    @Column(name = "EMAIL", nullable = false, unique = true, length = 100)
    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public Account email(String email) {
        setEmail(email);
        return this;
    }

    // -- [isEnabled] ------------------------

    @NotNull
    @Column(name = "IS_ENABLED", nullable = false, length = 1)
    public Boolean getIsEnabled() {
        return isEnabled;
    }

    public void setIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
    }

    public Account isEnabled(Boolean isEnabled) {
        setIsEnabled(isEnabled);
        return this;
    }

    // -- [civility] ------------------------

    @FixedLength(length = 2)
    @Column(name = "CIVILITY", length = 2)
    public String getCivility() {
        return civility;
    }

    public void setCivility(String civility) {
        this.civility = civility;
    }

    public Account civility(String civility) {
        setCivility(civility);
        return this;
    }

    // -- [firstName] ------------------------

    @Size(max = 100)
    @Column(name = "FIRST_NAME", length = 100)
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public Account firstName(String firstName) {
        setFirstName(firstName);
        return this;
    }

    // -- [lastName] ------------------------

    @Size(max = 100)
    @Column(name = "LAST_NAME", length = 100)
    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public Account lastName(String lastName) {
        setLastName(lastName);
        return this;
    }

    // -- [birthDate] ------------------------

    @Column(name = "BIRTH_DATE", length = 11)
    @Temporal(TIMESTAMP)
    public Date getBirthDate() {
        return birthDate;
    }

    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    public Account birthDate(Date birthDate) {
        setBirthDate(birthDate);
        return this;
    }

    // -- [description] ------------------------

    @Size(max = 255)
    @Column(name = "DESCRIPTION")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public Account description(String description) {
        setDescription(description);
        return this;
    }

    // -- [creationDate] ------------------------

    @Column(name = "CREATION_DATE", length = 11)
    @Temporal(TIMESTAMP)
    public Date getCreationDate() {
        return creationDate;
    }

    public void setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }

    public Account creationDate(Date creationDate) {
        setCreationDate(creationDate);
        return this;
    }

    // -- [creationAuthor] ------------------------

    @Column(name = "CREATION_AUTHOR", length = 200)
    public String getCreationAuthor() {
        return creationAuthor;
    }

    public void setCreationAuthor(String creationAuthor) {
        this.creationAuthor = creationAuthor;
    }

    public Account creationAuthor(String creationAuthor) {
        setCreationAuthor(creationAuthor);
        return this;
    }

    // -- [lastModificationDate] ------------------------

    @Column(name = "LAST_MODIFICATION_DATE", length = 11)
    @Temporal(TIMESTAMP)
    public Date getLastModificationDate() {
        return lastModificationDate;
    }

    public void setLastModificationDate(Date lastModificationDate) {
        this.lastModificationDate = lastModificationDate;
    }

    public Account lastModificationDate(Date lastModificationDate) {
        setLastModificationDate(lastModificationDate);
        return this;
    }

    // -- [lastModificationAuthor] ------------------------

    @Column(name = "LAST_MODIFICATION_AUTHOR", length = 200)
    public String getLastModificationAuthor() {
        return lastModificationAuthor;
    }

    public void setLastModificationAuthor(String lastModificationAuthor) {
        this.lastModificationAuthor = lastModificationAuthor;
    }

    public Account lastModificationAuthor(String lastModificationAuthor) {
        setLastModificationAuthor(lastModificationAuthor);
        return this;
    }

    // -- [version] ------------------------

    @Column(name = "VERSION", precision = 10)
    @Version
    public Integer getVersion() {
        return version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

    public Account version(Integer version) {
        setVersion(version);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to One support
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // many-to-one: Account.address ==> Address.id
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @JoinColumn(name = "ADDRESS_ID")
    @ManyToOne(cascade = { PERSIST, MERGE }, fetch = LAZY)
    public Address getAddress() {
        return address;
    }

    /**
     * Set the {@link #address} without adding this Account instance on the passed {@link #address}
     */
    public void setAddress(Address address) {
        this.address = address;
    }

    public Account address(Address address) {
        setAddress(address);
        return this;
    }

    // -----------------------------------------------------------------
    // Many to Many
    // -----------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
    // many-to-many: account ==> roles
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

    /**
     * Returns the {@link #roles} list.
     */
    @JoinTable(name = "ACCOUNT_ROLE", joinColumns = @JoinColumn(name = "ACCOUNT_ID"), inverseJoinColumns = @JoinColumn(name = "ROLE_ID"))
    @ManyToMany(cascade = { PERSIST, MERGE })
    public List<Role> getRoles() {
        return roles;
    }

    /**
     * Set the {@link #roles} list.
     *
     * @param roles the list of Role
     */
    public void setRoles(List<Role> roles) {
        this.roles = roles;
    }

    /**
     * Helper method to add the passed {@link Role} to the {@link #roles} list.
     */
    public boolean addRole(Role role) {
        return getRoles().add(role);
    }

    /**
     * Helper method to remove the passed {@link Role} from the {@link #roles} list.
     */
    public boolean removeRole(Role role) {
        return getRoles().remove(role);
    }

    /**
     * Helper method to determine if the passed {@link Role} is present in the {@link #roles} list.
     */
    public boolean containsRole(Role role) {
        return getRoles() != null && getRoles().contains(role);
    }

    /**
     * Apply the default values.
     */
    public Account withDefaults() {
        return this;
    }

    /**
     * Equals implementation using a business key.
     */
    @Override
    public boolean equals(Object other) {
        return this == other || (other instanceof Account && hashCode() == other.hashCode());
    }

    private volatile int previousHashCode = 0;

    @Override
    public int hashCode() {
        int hashCode = Objects.hashCode(getEmail());

        if (previousHashCode != 0 && previousHashCode != hashCode) {
            log.warn("DEVELOPER: hashCode has changed!." //
                    + "If you encounter this message you should take the time to carefuly review equals/hashCode for: " //
                    + getClass().getCanonicalName());
        }

        previousHashCode = hashCode;
        return hashCode;
    }

    /**
     * Construct a readable string representation for this Account instance.
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return Objects.toStringHelper(this) //
                .add("id", getId()) //
                .add("login", getLogin()) //
                .add("password", "XXXX") //
                .add("email", getEmail()) //
                .add("isEnabled", getIsEnabled()) //
                .add("civility", getCivility()) //
                .add("firstName", getFirstName()) //
                .add("lastName", getLastName()) //
                .add("birthDate", getBirthDate()) //
                .add("description", getDescription()) //
                .add("creationDate", getCreationDate()) //
                .add("creationAuthor", getCreationAuthor()) //
                .add("lastModificationDate", getLastModificationDate()) //
                .add("lastModificationAuthor", getLastModificationAuthor()) //
                .add("version", getVersion()) //
                .toString();
    }

    @PrePersist
    protected void prePersist() {
        if (AuditContextHolder.audit()) {
            setCreationAuthor(AuditContextHolder.username());
            setCreationDate(new Date());
        }
    }

    @PreUpdate
    protected void preUpdate() {
        if (AuditContextHolder.audit()) {
            setLastModificationAuthor(AuditContextHolder.username());
            setLastModificationDate(new Date());
        }
    }
}