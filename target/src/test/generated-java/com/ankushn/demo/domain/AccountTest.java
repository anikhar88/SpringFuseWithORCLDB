/*
 * (c) Copyright 2005-2015 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.ankushn.demo.domain;

import static org.fest.assertions.Assertions.assertThat;

import java.io.*;
import java.util.*;

import org.junit.Test;

import com.ankushn.demo.util.ValueGenerator;

/**
 * Basic tests for Account
 */
@SuppressWarnings("unused")
public class AccountTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        Account model = new Account();
        assertThat(model.isIdSet()).isFalse();
    }

    @Test
    public void isIdSetReturnsTrue() {
        Account model = new Account();
        model.setId(ValueGenerator.getUniqueString(36));
        assertThat(model.getId()).isNotNull();
        assertThat(model.isIdSet()).isTrue();
    }

    //-------------------------------------------------------------
    // Many to One:  Account.address ==> Address.id
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setAddress() {
        Account many = new Account();

        // init
        Address one = new Address();
        one.setId(ValueGenerator.getUniqueInteger());
        many.setAddress(one);

        // make sure it is propagated properly
        assertThat(many.getAddress()).isEqualTo(one);

        // now set it to back to null
        many.setAddress(null);

        // make sure null is propagated properly
        assertThat(many.getAddress()).isNull();
    }

    //-------------------------------------------------------------
    // Pure Many to Many
    //-------------------------------------------------------------

    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    // - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

    @Test
    public void manyToMany_addRole() {
        Account many1 = new Account();
        Role many2 = new Role();

        // add it
        many1.addRole(many2);

        // check it is propagated
        assertThat(many1.getRoles()).contains(many2);
        // now let's remove it
        many1.removeRole(many2);

        // check it is propagated
        assertThat(many1.getRoles().contains(many2)).isFalse();
    }

    @Test
    public void equalsUsingBusinessKey() {
        Account model1 = new Account();
        Account model2 = new Account();
        String email = ValueGenerator.getUniqueEmail();
        model1.setEmail(email);
        model2.setEmail(email);
        assertThat(model1).isEqualTo(model2);
        assertThat(model2).isEqualTo(model1);
        assertThat(model1.hashCode()).isEqualTo(model2.hashCode());
    }
}