/*
 * (c) Copyright 2005-2015 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to purchase Celerio ? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Template pack-backend-jpa:src/test/java/domain/ModelTest.e.vm.java
 */
package com.ankushn.demo.domain;

import static org.fest.assertions.Assertions.assertThat;

import java.io.*;
import java.util.*;

import org.junit.Test;

import com.ankushn.demo.util.ValueGenerator;

/**
 * Basic tests for Document
 */
@SuppressWarnings("unused")
public class DocumentTest {

    // test unique primary key
    @Test
    public void newInstanceHasNoPrimaryKey() {
        Document model = new Document();
        assertThat(model.isIdSet()).isFalse();
    }

    @Test
    public void isIdSetReturnsTrue() {
        Document model = new Document();
        model.setId(ValueGenerator.getUniqueString(36));
        assertThat(model.getId()).isNotNull();
        assertThat(model.isIdSet()).isTrue();
    }

    //-------------------------------------------------------------
    // Many to One:  Document.account ==> Account.id
    //-------------------------------------------------------------

    @Test
    public void manyToOne_setAccount() {
        Document many = new Document();

        // init
        Account one = new Account();
        one.setId(ValueGenerator.getUniqueString(36));
        many.setAccount(one);

        // make sure it is propagated properly
        assertThat(many.getAccount()).isEqualTo(one);

        // now set it to back to null
        many.setAccount(null);

        // make sure null is propagated properly
        assertThat(many.getAccount()).isNull();
    }

    /*
     public void equalsUsingPk() {
     Document model1 = new Document();
     Document model2 = new Document();

     String id = ValueGenerator.getUniqueString(36);
     model1.setId(id);
     model2.setId(id);

     model1.setDocumentBinary("dummy".getBytes());
     model2.setDocumentBinary("dummy".getBytes());

     model1.setDocumentFileName("dummy.txt");
     model2.setDocumentFileName("dummy.txt");

     model1.setDocumentContentType("application/text");
     model2.setDocumentContentType("application/text");

     model1.setDocumentSize(1);
     model2.setDocumentSize(1);

     model1.setVersion(1);
     model2.setVersion(1);
     assertThat(model1.isIdSet()).isTrue();
     assertThat(model2.isIdSet()).isTrue();
     assertThat(model1.hashCode()).isEqualTo(model2.hashCode());
     assertThat(model1).isEqualTo(model2);
     assertThat(model2).isEqualTo(model1);
     }
     */
}